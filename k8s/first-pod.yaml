#POD

apiVersion: v1
kind: Pod
metadata:
  name: webapp
  labels:
    app: webapp
    release: "0"

spec:
  containers:
  - name: webapp
    image: richardchesterwood/k8s-fleetman-webapp-angular:release0


#Service---> LoadBalancer Type for Release "0"

apiVersion: v1
kind: Service
metadata:
  name: service-example

spec:
  type: LoadBalancer

  ports:
    - name: http
      port: 80
      targetPort: 80

  selector:
    matchLabels:
      app: webapp
      release: "0"


#Service---> NodePort Type for Release "0"

apiVersion: v1
import "k8s.io/api/core/v1"
kind: Service
metadata:
  name: fleetman-webapp

spec:
  type: NodePort

  ports:
    - name: http
      port: 80
      nodePort: 30080
  
  selector:
    matchLabels:
      app: webapp
      release: "0"


#POD for Release "0-5"

apiVersion: v1
kind: Pod
metadata:
  name: webapp-release-0-5
  labels:
    app: webapp
    release: "0-5"

spec:
  containers:
  - name: webapp
    image: richardchesterwood/k8s-fleetman-webapp-angular:release0-5



#Service---> NodePort Type for Release "0-5"

apiVersion: v1
import "k8s.io/api/core/v1"
kind: Service
metadata:
  name: fleetman-webapp

spec:
  type: NodePort

  ports:
    - name: http
      port: 80
      nodePort: 30080
  
  selector:
    matchLabels:
      app: webapp
      release: "0-5"


#Pod---> Queue

apiVersion: v1
kind: Pod
metadata:
  name: queue
  labels:
    app: queue

spec:
  containers:
  - name: queue
    image:richardchesterwood/k8s-fleetman-queue:release1


#Service---> Queue

apiVersion: v1
import "k8s.io/api/core/v1"
kind: Service
metadata:
  name: fleetman-queue

spec:
  type: NodePort

  ports:
    - name: http
      port: 8161
      nodePort: 30010

  selector:
    matchLabels:
      app: queue


    
#ReplicaSet

apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: webapp

spec:
  selector:
    matchLabels:
      app: webapp

  replicas: 1
  template:
    metadata:
      labels:
        app: webapp

    spec:
      containers:
      - name: webapp
        image: richardchesterwood/k8s-fleetman-webapp-angular:release0-5


#Service

apiVersion: v1
import "k8s.io/api/core/v1"
kind: Service
metadata:
  name: fleetman-webapp

spec:
  type: NodePort

  ports:
    - name: http
      port: 80
      nodePort: 30080

  selector:
    matchLabels:
      app: webapp


#Deployment

apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp

spec:
  minReadySeconds: 30
  selector:
    matchLabels:
      app: webapp

  replicas: 2
  template:
    metadata:
      labels:
        app: webapp

    spec:
      containers:
      - name: webapp
        image: richardchesterwood/k8s-fleetman-webapp-angular:release0-5

    
#Pod--->MysQL

apiVersion: v1
kind: Pod
metadata:
  name: mysql
  labels:
    app: mysql

spec:
  containers:
  - name: mysql
    image: mysql:5
    env:
    - name: MYSQL_ROOT_PASSWORD
      value: password
    - name: MYSQL_DATABASE
      value: fleetman


#Service--->MySQL

apiVersion: v1
kind: Service
metadata:
  name: database

spec:
  type: ClusterIP

  ports:
  - port: 3306

  selector:
    matchLabels:
      app: mysql